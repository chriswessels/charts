# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

configMaps: {}
  # config:
  #   data:
  #     config.toml: |-
  #      content
  # ecdsa-config: {}
    # data:
    #   config.toml: |-
    #     content
secrets: {}
  # wallet:
  #   data:
  #     wallet.json: |
  #       plaintext content

apps: {}
  # component-name:
  #   enabled: true

  #   kind: StatefulSet
    
  #   replicaCount: 1

  #   volumeClaims:
  #     data:
  #       accessModes: [ReadWriteOnce]
  #       resources:
  #         requests:
  #           storage: 1Gi

  #   envsubst:
  #     enabled: true
  #     env:
  #       LOG_LEVEL: debug
  #       IPFS_LOGGING_FMT: nocolor
  #       EXTERNAL_LB_IP: "123.123.123.123"

  #     secretEnv:
  #       KEEP_ETHEREUM_PASSWORD:
  #         lname: passphrase
  #         key: passphrase

  #     passthroughMountPath: /envsubst-passthrough

  #     configMapMounts:
  #       /mounts/config:
  #         lname: config

  #     files:
  #       /mounts/config/config.toml: /envsubst-passthrough/config.toml

  #   containers:
  #     app:
  #       image:
  #         repository: repo/image
  #         tag: latest
  #         pullPolicy: IfNotPresent

  #       imagePullSecrets: []

  #       ports:
  #         tcp-3919: 3919

  #       command:
  #         - keep-client

  #       args:
  #         - -config
  #         - /envsubst-passthrough/config.toml
  #         - start

  #       env:
  #         LOG_LEVEL: debug
  #         IPFS_LOGGING_FMT: nocolor
  #         EXTERNAL_LB_IP: "123.123.123.123"

  #       secretEnv:
  #         KEEP_ETHEREUM_PASSWORD:
  #           lname: passphrase
  #           key: passphrase

  #       secretMounts:
  #         /mounts/wallet:
  #           lname: wallet

  #       configMapMounts:
  #         /mounts/config:
  #           lname: config

  #       volumeClaimMounts:
  #         /mounts/data:
  #           lname: data

  #       securityContext: {}
  #         # capabilities:
  #         #   drop:
  #         #   - ALL
  #         # readOnlyRootFilesystem: true
  #         # runAsNonRoot: true
  #         # runAsUser: 1000

  #       resources: {}
  #         # We usually recommend not to specify default resources and to leave this as a conscious
  #         # choice for the user. This also increases chances charts run on environments with little
  #         # resources, such as Minikube. If you do want to specify resources, uncomment the following
  #         # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  #         # limits:
  #         #   cpu: 100m
  #         #   memory: 128Mi
  #         # requests:
  #         #   cpu: 100m
  #         #   memory: 128Mi

  #   service:
  #     enabled: true
  #     type: ClusterIP
  #     ports:
  #       tcp-3919: 3919

  #   serviceAccount:
  #     # Specifies whether a service account should be created
  #     create: true
  #     # Annotations to add to the service account
  #     annotations: {}
  #     # The name of the service account to use.
  #     # If not set and create is true, a name is generated using the fullname template
  #     name:

  #   podSecurityContext: {}
  #     # fsGroup: 2000

  #   nodeSelector: {}

  #   tolerations: []

  #   affinity: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

